subprojects {
    apply plugin: 'scala'
    apply plugin: 'eclipse'

    group = 'net.hulte.sgfx'
    version = '0.1'

    archivesBaseName = group + "-" + name

    repositories {
        mavenCentral()
    }

    dependencies {
        scalaTools 'org.scala-lang:scala-compiler:2.9.2'
        scalaTools 'org.scala-lang:scala-library:2.9.2'
        compile 'org.scala-lang:scala-library:2.9.2'

        compile 'log4j:log4j:1.2.16'
    }

    eclipse {
        classpath {
            containers "org.scala-ide.sdt.launching.SCALA_CONTAINER"
            defaultOutputDir = new File(project.buildDir, "eclipseClasses");
            file {
                whenMerged { classpath ->
                    def javaRuntime = classpath.entries.find {
                        it instanceof org.gradle.plugins.ide.eclipse.model.Container &&
                            it.path.contains('JRE_CONTAINER') }

                    def scalaRuntime = classpath.entries.find {
                        it instanceof org.gradle.plugins.ide.eclipse.model.Container &&
                            it.path.contains('SCALA_CONTAINER') }

                    def scalaLib = classpath.entries.findAll { it.toString().contains("scala-library") }

                    // Avoid problems with the Scala IDE
                    classpath.entries.removeAll(scalaLib)

                    // Change container order to support running unit tests
                    if (javaRuntime != null && scalaRuntime != null) {
                        classpath.entries.remove(javaRuntime)
                        classpath.entries.remove(scalaRuntime)
                        classpath.entries.add(scalaRuntime)
                        classpath.entries.add(javaRuntime)
                    }
                }
            }
        }
    }
}

